#****************************************************
# check the recovery when the flag is set to 1 (default)
# innodb_log_compressed_pages=1  crash the server
# after commit, on INSERT/DELETE/UPDATE
# operations.check the Data in the table.
#****************************************************
# This test case needs to crash the server. Needs a debug server.
--source include/have_debug.inc
#
# This test case needs InnoDB.
-- source include/have_innodb.inc

# Avoid CrashReporter popup on Mac
--source include/not_crashrep.inc

# Not supported in embeddedinnodb_log_compressed_pages_basic.test
--source include/not_embedded.inc

#not supported in valgrindb
--source include/not_valgrind.inc

let $per_table=`SELECT @@innodb_file_per_table`;
let $format=`SELECT @@innodb_file_format`;
let $log_compressed=`SELECT @@innodb_log_compressed_pages`;

--echo #set the flags
SET GLOBAL innodb_file_per_table=on;
SET GLOBAL innodb_file_format=`1`;


--echo #check the flag is set to 1
SELECT @@innodb_log_compressed_pages;
 
CREATE TABLE t1(id int primary key, a text) 
ENGINE=innodb key_block_size=1;

-- disable_query_log

--echo # start session
BEGIN;

--echo # insert some rows to trigger btr page reorg
-- let $i = 100
while ($i)
{
  
  eval INSERT INTO t1 VALUES($i, repeat('abcdefghijklmnopqrstuvwxyz',4));
  dec $i;

}

COMMIT;

-- echo #Check recovery on INSERT operation.
BEGIN;

--echo # Insert a record & crash the server before commit
eval INSERT INTO t1 VALUES(101,'Scott Tiger');

--echo # Request a crash on next execution of commit.
SET SESSION debug="+d,crash_commit_after_prepare";

--echo # Write file to make mysql-test-run.pl start up the server again
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect

--echo # Execute the statement that causes the crash.
COMMIT;

--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

--echo #check if recovery went fine, should show count=1
SELECT COUNT(*) FROM t1 WHERE id = 101;


-- echo #Check recovery on UPDATE operation.
BEGIN;

--echo # Insert a record & crash the server after commit
eval UPDATE t1 SET a = "updated_col";

--echo # Request a crash on next execution of commit.
SET SESSION debug="+d,crash_commit_after_prepare";

--echo # Write file to make mysql-test-run.pl start up the server again
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect

--echo # Execute the statement that causes the crash.
COMMIT;

--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

--echo #check if recovery went fine, should show count=101
SELECT COUNT(*) FROM t1 WHERE a = "updated_col";

-- echo #Check recovery on DELETE operation.
BEGIN;

--echo # Insert a record & crash the server after commit
eval DELETE FROM t1;

--echo # Request a crash on next execution of commit.
SET SESSION debug="+d,crash_commit_after_prepare";

--echo # Write file to make mysql-test-run.pl start up the server again
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect

--echo # Execute the statement that causes the crash.
COMMIT;

--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

--echo #check if recovery went fine, should show count=0
SELECT COUNT(*) FROM t1;


--echo #clean up
DROP TABLE t1;


# restore environment to the state it was before this test execution

-- disable_query_log
eval SET GLOBAL innodb_file_format=$format;
eval SET GLOBAL innodb_file_per_table=$per_table;
eval SET GLOBAL innodb_log_compressed_pages=$log_compressed;
